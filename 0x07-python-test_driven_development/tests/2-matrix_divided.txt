Tests "2-matrix_divided.py" module
==================================

Using "matrix_divided"
======================

from 2-matrix_divided import matrix_divided

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Tests:

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[5],[2]], 5)
[[1.0], [0.4]]

>>> matrix_divided([[-4],[7]], -6)
[[0.67], [-1.17]]

>>> matrix_divided([[-4],[-7]], -6)
[[0.67], [1.17]]

>>> matrix_divided([[5, 4, 3.6],[3, 8.4, 9.7]], -4)
[[-1.25, -1.0, -0.9], [-0.75, -2.1, -2.42]]

>>> matrix_divided([[7, 2, 8],[5, 4, -3]], 10.6)
[[0.66, 0.19, 0.75], [0.47, 0.38, -0.28]]

>>> matrix_divided([[], []], 2)
[[], []]

>>> matrix_divided([["school"], [5]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3, 4], [5, 6, 7, 8]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero


>>> matrix_divided([[1, 2, 3, 4], [5, 6, 7]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[2, 4, 6, 8], [None]], 10)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[None], [2, 4, 6, 8]], 10)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[2, 4, 6], [3, 5, 7]], "holberton")
Traceback (most recent call last):
...
TypeError: div must be a number
